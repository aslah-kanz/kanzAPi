name: Deploy .NET 8 Application to VM Docker Container

on:
  push:
    branches:
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build .NET application
        run: dotnet publish -c Release -o out

      - name: Build Docker image
        run: docker build -t kanzapi:latest .

      - name: Save Docker image to file
        run: docker save kanzapi:latest | gzip > image.tar.gz

      - name: Copy Docker image to VM
        run: |
          docker run --rm \
            -e PLUGIN_HOST=${{ secrets.AZURE_VM_HOST }} \
            -e PLUGIN_PORT=22 \
            -e PLUGIN_USERNAME=${{ secrets.AZURE_VM_USERNAME }} \
            -e PLUGIN_PASSWORD=${{ secrets.AZURE_VM_PASSWORD }} \
            -e PLUGIN_TARGET=~/image.tar.gz \
            -e PLUGIN_SOURCE=image.tar.gz \
            -v $(pwd):$(pwd) \
            -w $(pwd) \
            appleboy/drone-scp

      - name: Load Docker image on VM and deploy
        run: |
          docker run --rm \
            -e PLUGIN_HOST=${{ secrets.AZURE_VM_HOST }} \
            -e PLUGIN_PORT=22 \
            -e PLUGIN_USERNAME=${{ secrets.AZURE_VM_USERNAME }} \
            -e PLUGIN_PASSWORD=${{ secrets.AZURE_VM_PASSWORD }} \
            -e PLUGIN_SCRIPT="gunzip -c ~/image.tar.gz | docker load && docker stop app || true && docker rm app || true && docker run -d --name app -p 80:80 kanzapi:latest" \
            appleboy/drone-ssh
