// <auto-generated />
using System;
using KanzApi.Configurations.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KanzApi.Migrations
{
    [DbContext(typeof(CommonDbContext))]
    [Migration("20240606082625_StoreOrderPurchaseQuoteStatus")]
    partial class StoreOrderPurchaseQuoteStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KanzApi.Account.Entities.CompanyMember", b =>
                {
                    b.Property<int?>("PrincipalDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PrincipalId")
                        .HasColumnType("int");

                    b.HasKey("PrincipalDetailId", "PrincipalId");

                    b.HasIndex("PrincipalId");

                    b.ToTable("CompanyMember", "Account");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.Department", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PrincipalDetailId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrincipalDetailId");

                    b.ToTable("Department", "Account");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.Notification", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageArgs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrincipalId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReadAt")
                        .HasColumnType("datetime");

                    b.Property<string>("ReferenceId")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("PrincipalId");

                    b.ToTable("Notification", "Account");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.Principal", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<bool?>("AcceptNewsLetter")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("ImageId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.HasIndex("CountryCode", "PhoneNumber")
                        .IsUnique()
                        .HasFilter("[CountryCode] IS NOT NULL AND [PhoneNumber] IS NOT NULL");

                    b.ToTable("Principal", "Account");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.PrincipalAddress", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool?>("DefaultAddress")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<decimal?>("Latitude")
                        .IsRequired()
                        .HasColumnType("decimal(12,8)");

                    b.Property<decimal?>("Longitude")
                        .IsRequired()
                        .HasColumnType("decimal(13,8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("PrincipalId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrincipalId", "Name")
                        .IsUnique();

                    b.ToTable("PrincipalAddress", "Account");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.PrincipalBank", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("BeneficiaryName")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<long?>("DocumentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("PaymentMode")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<int?>("PrincipalId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("SwiftCode")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DocumentId");

                    b.HasIndex("Iban")
                        .IsUnique();

                    b.HasIndex("PrincipalId");

                    b.ToTable("PrincipalBank", "Account");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.PrincipalDepartment", b =>
                {
                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("PrincipalId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId", "PrincipalId");

                    b.HasIndex("PrincipalId");

                    b.ToTable("PrincipalDepartment", "Account");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.PrincipalDetail", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("CompanyNameAr")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("CompanyNameEn")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("CompanyNumber")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<int?>("CountryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PrincipalId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("PrincipalId")
                        .IsUnique();

                    b.ToTable("PrincipalDetail", "Account");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.PrincipalDetailItem", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrincipalDetailId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PrincipalDetailId");

                    b.ToTable("PrincipalDetailItem", "Account");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.PrincipalRole", b =>
                {
                    b.Property<int?>("PrincipalId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("PrincipalId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("PrincipalRole", "Account");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.PrincipalStore", b =>
                {
                    b.Property<int?>("PrincipalId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("PrincipalId", "StoreId");

                    b.HasIndex("StoreId");

                    b.ToTable("PrincipalStore", "Account");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.PrincipalWallet", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PrincipalId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ReferenceId")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrincipalId");

                    b.ToTable("PrincipalWallet", "Account");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.Privilege", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Privilege", "Account");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.Role", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Role", "Account");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.RolePrivilege", b =>
                {
                    b.Property<int?>("PrivilegeId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("PrivilegeId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePrivilege", "Account");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.Store", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal?>("Latitude")
                        .IsRequired()
                        .HasColumnType("decimal(12,8)");

                    b.Property<decimal?>("Longitude")
                        .IsRequired()
                        .HasColumnType("decimal(13,8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PrincipalId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("SaleItemCount")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("WarehouseId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("PrincipalId");

                    b.ToTable("Store", "Account");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Banner", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Banner", "Common");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Blog", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<int>("ReadCount")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Blog", "Common");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Catalogue", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("DocumentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<int>("ReadCount")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("ImageId");

                    b.ToTable("Catalogue", "Common");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Certificate", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Certificate", "Common");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Country", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<int?>("PhoneCode")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PhoneMaxLength")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PhoneMinLength")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PhoneStartNumber")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("PhoneCode")
                        .IsUnique();

                    b.ToTable("Country", "Common");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Currency", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Currency", "Common");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Document", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Document", "Common");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Faq", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("FaqGroupId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FaqGroupId");

                    b.ToTable("Faq", "Common");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.FaqGroup", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool?>("ShowAtHomePage")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FaqGroup", "Common");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Image", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Height")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Width")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Image", "Common");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Job", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("JobFieldId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Requirement")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobFieldId");

                    b.ToTable("Job", "Common");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.JobApplicant", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("DocumentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("JobId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("JobId");

                    b.ToTable("JobApplicant", "Common");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.JobField", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("JobField", "Common");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Language", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("ImageId");

                    b.ToTable("Language", "Common");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Subscriber", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subscriber", "Common");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Suggestion", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Message")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Subject")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Suggestion", "Common");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.WebPage", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<bool?>("ShowAtHomePage")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("WebPage", "Common");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.WebsiteProfile", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Facebook")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<long?>("FaviconId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Instagram")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("Linkedin")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<string>("Name")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Twitter")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Youtube")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.HasKey("Id");

                    b.HasIndex("FaviconId");

                    b.HasIndex("ImageId");

                    b.ToTable("WebsiteProfile", "Common");
                });

            modelBuilder.Entity("KanzApi.Logging.Entities.ErrorLog", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ErrorLog", "Logging");
                });

            modelBuilder.Entity("KanzApi.Logging.Entities.InternalRequestLog", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Headers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("QueryString")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("InternalRequestLog", "Logging");
                });

            modelBuilder.Entity("KanzApi.Logging.Entities.InternalResponseLog", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Headers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RequestId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("InternalResponseLog", "Logging");
                });

            modelBuilder.Entity("KanzApi.Logging.Entities.RequestLog", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Headers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("QueryString")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("RequestLog", "Logging");
                });

            modelBuilder.Entity("KanzApi.Product.Entities.Attribute", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("GroupAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("SortOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Unit1Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit1En")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit2Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit2En")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit3Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit3En")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NameEn")
                        .IsUnique();

                    b.ToTable("Attribute", "Product");
                });

            modelBuilder.Entity("KanzApi.Product.Entities.Brand", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<long?>("BwImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("ShowAtHomePage")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BwImageId");

                    b.HasIndex("ImageId");

                    b.HasIndex("NameEn")
                        .IsUnique();

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Brand", "Product");
                });

            modelBuilder.Entity("KanzApi.Product.Entities.BrandCategory", b =>
                {
                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("BrandId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BrandCategory", "Product");
                });

            modelBuilder.Entity("KanzApi.Product.Entities.Category", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("ShowAtHomePage")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("ParentId");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Category", "Product");
                });

            modelBuilder.Entity("KanzApi.Product.Entities.Product", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("BrandId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("FamilyCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("GroupCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<double?>("Height")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<decimal?>("HighestPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("IconId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<double?>("Length")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<decimal?>("LowestPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.Property<string>("Mpn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PrincipalDetailId")
                        .HasColumnType("int");

                    b.Property<bool?>("Sellable")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("Slug")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<double?>("Weight")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double?>("Width")
                        .IsRequired()
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("IconId");

                    b.HasIndex("ImageId");

                    b.HasIndex("PrincipalDetailId");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasFilter("[Slug] IS NOT NULL");

                    b.ToTable("Product", "Product");
                });

            modelBuilder.Entity("KanzApi.Product.Entities.ProductAttribute", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AttributeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PropertyId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Value1Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value1En")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value2Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value2En")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value3Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value3En")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ImageId");

                    b.HasIndex("PropertyId");

                    b.HasIndex("ProductId", "AttributeId")
                        .IsUnique();

                    b.ToTable("ProductAttribute", "Product");
                });

            modelBuilder.Entity("KanzApi.Product.Entities.ProductCategory", b =>
                {
                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategory", "Product");
                });

            modelBuilder.Entity("KanzApi.Product.Entities.ProductImage", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("ImageId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("SortOrder")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("ProductId", "ImageId")
                        .IsUnique();

                    b.ToTable("ProductImage", "Product");
                });

            modelBuilder.Entity("KanzApi.Product.Entities.Property", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("FieldsAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldsEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NameEn")
                        .IsUnique();

                    b.ToTable("Property", "Product");
                });

            modelBuilder.Entity("KanzApi.Product.Entities.SaleItem", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("BcId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Enabled")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<int?>("MaxOrderQuantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("MaxPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MinOrderQuantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("MinPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ReservedStock")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("Stock")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("VendorSku")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.HasIndex("ProductId", "StoreId")
                        .IsUnique();

                    b.ToTable("SaleItem", "Product");
                });

            modelBuilder.Entity("KanzApi.Security.Entities.OneTimeToken", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiredAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("PrincipalId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrincipalId");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("Type", "PrincipalId")
                        .IsUnique();

                    b.ToTable("OneTimeToken", "Security");
                });

            modelBuilder.Entity("KanzApi.Security.Entities.Otp", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int>("AttemptCount")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiredAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("PrincipalId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("PrincipalId");

                    b.ToTable("Otp", "Security");
                });

            modelBuilder.Entity("KanzApi.Security.Entities.RefreshToken", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("AccessTokenId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiredAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("PrincipalId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrincipalId")
                        .IsUnique();

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("RefreshToken", "Security");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.Cart", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PrincipalId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Stock")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PrincipalId", "ProductId", "Price")
                        .IsUnique();

                    b.ToTable("Cart", "Transaction");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.CartSaleItem", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("CartId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MaxOrderQuantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("MaxPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MinOrderQuantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("MinPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("SaleItemId")
                        .IsRequired()
                        .HasColumnType("bigint");

                    b.Property<int?>("Stock")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("VendorSku")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SaleItemId");

                    b.HasIndex("StoreId");

                    b.ToTable("CartSaleItem", "Transaction");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.CustomerOrder", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AddressId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryOptionId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EstimatedDeliveryCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GrandTotal")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("HiglightedProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("PrincipalDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PrincipalId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("PromoCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PurchaseQuoteStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("SubTotal")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("UrwayTrackId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UrwayTransactionId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("HiglightedProductId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("PrincipalDetailId");

                    b.HasIndex("PrincipalId");

                    b.ToTable("CustomerOrder", "Transaction");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.CustomerOrderItem", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CartId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<Guid?>("CustomerOrderId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("SubTotal")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerOrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("CustomerOrderItem", "Transaction");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.Exchange", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdminComment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PrincipalDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PrincipalId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<Guid?>("PurchaseQuoteId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("StoreId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal?>("SubTotal")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("VendorComment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("PrincipalDetailId");

                    b.HasIndex("PrincipalId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseQuoteId");

                    b.HasIndex("StoreId");

                    b.ToTable("Exchange", "Transaction");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.ExchangeImage", b =>
                {
                    b.Property<Guid?>("ExchangeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.HasKey("ExchangeId", "ImageId");

                    b.HasIndex("ImageId");

                    b.ToTable("ExchangeImage", "Transaction");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.Inquiry", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PrincipalId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrincipalId");

                    b.HasIndex("ProductId");

                    b.ToTable("Inquiry", "Transaction");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.PaymentMethod", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("ImageArId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageArId");

                    b.HasIndex("ImageId");

                    b.ToTable("PaymentMethod", "Transaction");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.ProductReview", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PrincipalId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<Guid?>("PurchaseQuoteId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrincipalId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseQuoteId");

                    b.ToTable("ProductReview", "Transaction");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.ProductReviewImage", b =>
                {
                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ProductReviewId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ImageId", "ProductReviewId");

                    b.HasIndex("ProductReviewId");

                    b.ToTable("ProductReviewImage", "Transaction");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.PurchaseQuote", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CartId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ConfirmedQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<Guid?>("CustomerOrderId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerOrderItemId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("DiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MaxOrderQuantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("MaxPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MinOrderQuantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("MinPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PlatformCommission")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("RequestedQuantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("SaleItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Stock")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("StoreId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<Guid?>("StoreOrderId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TotalRequestedQuantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("VendorSku")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerOrderId");

                    b.HasIndex("CustomerOrderItemId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreId");

                    b.HasIndex("StoreOrderId");

                    b.ToTable("PurchaseQuote", "Transaction");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.Refund", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdminComment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PrincipalDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("PrincipalId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<Guid?>("PurchaseQuoteId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("StoreId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal?>("SubTotal")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("VendorComment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("PrincipalDetailId");

                    b.HasIndex("PrincipalId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseQuoteId");

                    b.HasIndex("StoreId");

                    b.ToTable("Refund", "Transaction");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.RefundImage", b =>
                {
                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("RefundId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ImageId", "RefundId");

                    b.HasIndex("RefundId");

                    b.ToTable("RefundImage", "Transaction");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.Shipping", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Cost")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<Guid?>("CustomerOrderId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ShippingMethodId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerOrderId");

                    b.HasIndex("ShippingMethodId");

                    b.ToTable("Shipping", "Transaction");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.ShippingMethod", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("DeliveryCompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DeliveryEstimateTime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShippingMethod", "Transaction");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.StoreOrder", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<Guid?>("CustomerOrderId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("DeliveryCost")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("OtoId")
                        .HasColumnType("int");

                    b.Property<int?>("PackageCount")
                        .HasColumnType("int");

                    b.Property<int?>("ProductCount")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("PurchaseQuoteStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("StoreId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerOrderId");

                    b.HasIndex("InvoiceNumber")
                        .IsUnique();

                    b.HasIndex("StoreId");

                    b.ToTable("StoreOrder", "Transaction");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.WishList", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PrincipalId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrincipalId");

                    b.HasIndex("ProductId", "PrincipalId")
                        .IsUnique();

                    b.ToTable("WishList", "Transaction");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.Withdraw", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("ImageId")
                        .HasColumnType("bigint");

                    b.Property<int?>("PrincipalId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("PrincipalId");

                    b.ToTable("Withdraw", "Transaction");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.CompanyMember", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.PrincipalDetail", null)
                        .WithMany()
                        .HasForeignKey("PrincipalDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Account.Entities.Principal", null)
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Account.Entities.Department", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.PrincipalDetail", "PrincipalDetail")
                        .WithMany()
                        .HasForeignKey("PrincipalDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrincipalDetail");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.Notification", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("KanzApi.Account.Entities.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("Principal");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.Principal", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.PrincipalAddress", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Principal");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.PrincipalBank", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("KanzApi.Common.Entities.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId");

                    b.HasOne("KanzApi.Account.Entities.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("Document");

                    b.Navigation("Principal");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.PrincipalDepartment", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Account.Entities.Principal", null)
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Account.Entities.PrincipalDetail", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.PrincipalDetailItem", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.PrincipalDetail", "PrincipalDetail")
                        .WithMany("Properties")
                        .HasForeignKey("PrincipalDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrincipalDetail");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.PrincipalRole", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.Principal", null)
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Account.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Account.Entities.PrincipalStore", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.Principal", null)
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Account.Entities.Store", null)
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Account.Entities.PrincipalWallet", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Principal");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.RolePrivilege", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.Privilege", null)
                        .WithMany()
                        .HasForeignKey("PrivilegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Account.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Account.Entities.Store", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Principal");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Banner", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Description", b1 =>
                        {
                            b1.Property<int>("BannerId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BannerId");

                            b1.ToTable("Banner", "Common");

                            b1.ToJson("Description");

                            b1.WithOwner()
                                .HasForeignKey("BannerId");
                        });

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Title", b1 =>
                        {
                            b1.Property<int>("BannerId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BannerId");

                            b1.ToTable("Banner", "Common");

                            b1.ToJson("Title");

                            b1.WithOwner()
                                .HasForeignKey("BannerId");
                        });

                    b.Navigation("Description");

                    b.Navigation("Image");

                    b.Navigation("Title")
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Blog", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Description", b1 =>
                        {
                            b1.Property<int>("BlogId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BlogId");

                            b1.ToTable("Blog", "Common");

                            b1.ToJson("Description");

                            b1.WithOwner()
                                .HasForeignKey("BlogId");
                        });

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Title", b1 =>
                        {
                            b1.Property<int>("BlogId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BlogId");

                            b1.ToTable("Blog", "Common");

                            b1.ToJson("Title");

                            b1.WithOwner()
                                .HasForeignKey("BlogId");
                        });

                    b.Navigation("Description");

                    b.Navigation("Image");

                    b.Navigation("Title")
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Catalogue", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId");

                    b.HasOne("KanzApi.Common.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Description", b1 =>
                        {
                            b1.Property<int>("CatalogueId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CatalogueId");

                            b1.ToTable("Catalogue", "Common");

                            b1.ToJson("Description");

                            b1.WithOwner()
                                .HasForeignKey("CatalogueId");
                        });

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Title", b1 =>
                        {
                            b1.Property<int>("CatalogueId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CatalogueId");

                            b1.ToTable("Catalogue", "Common");

                            b1.ToJson("Title");

                            b1.WithOwner()
                                .HasForeignKey("CatalogueId");
                        });

                    b.Navigation("Description");

                    b.Navigation("Document");

                    b.Navigation("Image");

                    b.Navigation("Title")
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Certificate", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Title", b1 =>
                        {
                            b1.Property<int>("CertificateId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CertificateId");

                            b1.ToTable("Certificate", "Common");

                            b1.ToJson("Title");

                            b1.WithOwner()
                                .HasForeignKey("CertificateId");
                        });

                    b.Navigation("Image");

                    b.Navigation("Title")
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Country", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Name", b1 =>
                        {
                            b1.Property<int>("CountryId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CountryId");

                            b1.ToTable("Country", "Common");

                            b1.ToJson("Name");

                            b1.WithOwner()
                                .HasForeignKey("CountryId");
                        });

                    b.Navigation("Image");

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Faq", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.FaqGroup", "FaqGroup")
                        .WithMany("Faqs")
                        .HasForeignKey("FaqGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Answer", b1 =>
                        {
                            b1.Property<int>("FaqId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FaqId");

                            b1.ToTable("Faq", "Common");

                            b1.ToJson("Answer");

                            b1.WithOwner()
                                .HasForeignKey("FaqId");
                        });

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Question", b1 =>
                        {
                            b1.Property<int>("FaqId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FaqId");

                            b1.ToTable("Faq", "Common");

                            b1.ToJson("Question");

                            b1.WithOwner()
                                .HasForeignKey("FaqId");
                        });

                    b.Navigation("Answer");

                    b.Navigation("FaqGroup");

                    b.Navigation("Question")
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Common.Entities.FaqGroup", b =>
                {
                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Description", b1 =>
                        {
                            b1.Property<int>("FaqGroupId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FaqGroupId");

                            b1.ToTable("FaqGroup", "Common");

                            b1.ToJson("Description");

                            b1.WithOwner()
                                .HasForeignKey("FaqGroupId");
                        });

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Title", b1 =>
                        {
                            b1.Property<int>("FaqGroupId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FaqGroupId");

                            b1.ToTable("FaqGroup", "Common");

                            b1.ToJson("Title");

                            b1.WithOwner()
                                .HasForeignKey("FaqGroupId");
                        });

                    b.Navigation("Description");

                    b.Navigation("Title")
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Job", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.JobField", "JobField")
                        .WithMany()
                        .HasForeignKey("JobFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Experience", b1 =>
                        {
                            b1.Property<int>("JobId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("JobId");

                            b1.ToTable("Job", "Common");

                            b1.ToJson("Experience");

                            b1.WithOwner()
                                .HasForeignKey("JobId");
                        });

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "JobLocation", b1 =>
                        {
                            b1.Property<int>("JobId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("JobId");

                            b1.ToTable("Job", "Common");

                            b1.ToJson("JobLocation");

                            b1.WithOwner()
                                .HasForeignKey("JobId");
                        });

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "JobType", b1 =>
                        {
                            b1.Property<int>("JobId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("JobId");

                            b1.ToTable("Job", "Common");

                            b1.ToJson("JobType");

                            b1.WithOwner()
                                .HasForeignKey("JobId");
                        });

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Responsibility", b1 =>
                        {
                            b1.Property<int>("JobId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("JobId");

                            b1.ToTable("Job", "Common");

                            b1.ToJson("Responsibility");

                            b1.WithOwner()
                                .HasForeignKey("JobId");
                        });

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Title", b1 =>
                        {
                            b1.Property<int>("JobId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("JobId");

                            b1.ToTable("Job", "Common");

                            b1.ToJson("Title");

                            b1.WithOwner()
                                .HasForeignKey("JobId");
                        });

                    b.Navigation("Experience")
                        .IsRequired();

                    b.Navigation("JobField");

                    b.Navigation("JobLocation")
                        .IsRequired();

                    b.Navigation("JobType")
                        .IsRequired();

                    b.Navigation("Responsibility")
                        .IsRequired();

                    b.Navigation("Title")
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Common.Entities.JobApplicant", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId");

                    b.HasOne("KanzApi.Common.Entities.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.JobField", b =>
                {
                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Name", b1 =>
                        {
                            b1.Property<int>("JobFieldId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("JobFieldId");

                            b1.ToTable("JobField", "Common");

                            b1.ToJson("Name");

                            b1.WithOwner()
                                .HasForeignKey("JobFieldId");
                        });

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Common.Entities.Language", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Name", b1 =>
                        {
                            b1.Property<int>("LanguageId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("LanguageId");

                            b1.ToTable("Language", "Common");

                            b1.ToJson("Name");

                            b1.WithOwner()
                                .HasForeignKey("LanguageId");
                        });

                    b.Navigation("Image");

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Common.Entities.WebPage", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.OwnsMany("KanzApi.Common.Models.LocalizableString", "Contents", b1 =>
                        {
                            b1.Property<int>("WebPageId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("WebPageId", "Id");

                            b1.ToTable("WebPage", "Common");

                            b1.ToJson("Contents");

                            b1.WithOwner()
                                .HasForeignKey("WebPageId");
                        });

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Title", b1 =>
                        {
                            b1.Property<int>("WebPageId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("WebPageId");

                            b1.ToTable("WebPage", "Common");

                            b1.ToJson("Title");

                            b1.WithOwner()
                                .HasForeignKey("WebPageId");
                        });

                    b.Navigation("Contents");

                    b.Navigation("Image");

                    b.Navigation("Title")
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Common.Entities.WebsiteProfile", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Image", "Favicon")
                        .WithMany()
                        .HasForeignKey("FaviconId");

                    b.HasOne("KanzApi.Common.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.Navigation("Favicon");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("KanzApi.Product.Entities.Brand", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Image", "BwImage")
                        .WithMany()
                        .HasForeignKey("BwImageId");

                    b.HasOne("KanzApi.Common.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Description", b1 =>
                        {
                            b1.Property<int>("BrandId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BrandId");

                            b1.ToTable("Brand", "Product");

                            b1.ToJson("Description");

                            b1.WithOwner()
                                .HasForeignKey("BrandId");
                        });

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Name", b1 =>
                        {
                            b1.Property<int>("BrandId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BrandId");

                            b1.ToTable("Brand", "Product");

                            b1.ToJson("Name");

                            b1.WithOwner()
                                .HasForeignKey("BrandId");
                        });

                    b.Navigation("BwImage");

                    b.Navigation("Description");

                    b.Navigation("Image");

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Product.Entities.BrandCategory", b =>
                {
                    b.HasOne("KanzApi.Product.Entities.Brand", null)
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Product.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Product.Entities.Category", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("KanzApi.Product.Entities.Category", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Description", b1 =>
                        {
                            b1.Property<int>("CategoryId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CategoryId");

                            b1.ToTable("Category", "Product");

                            b1.ToJson("Description");

                            b1.WithOwner()
                                .HasForeignKey("CategoryId");
                        });

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Name", b1 =>
                        {
                            b1.Property<int>("CategoryId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CategoryId");

                            b1.ToTable("Category", "Product");

                            b1.ToJson("Name");

                            b1.WithOwner()
                                .HasForeignKey("CategoryId");
                        });

                    b.Navigation("Description");

                    b.Navigation("Image");

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("KanzApi.Product.Entities.Product", b =>
                {
                    b.HasOne("KanzApi.Product.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KanzApi.Common.Entities.Image", "Icon")
                        .WithMany()
                        .HasForeignKey("IconId");

                    b.HasOne("KanzApi.Common.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("KanzApi.Account.Entities.PrincipalDetail", "PrincipalDetail")
                        .WithMany()
                        .HasForeignKey("PrincipalDetailId");

                    b.OwnsOne("KanzApi.Common.Models.Gtin", "Gtin", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .HasColumnType("int");

                            b1.Property<string>("Ean")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Upc")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductId");

                            b1.ToTable("Product", "Product");

                            b1.ToJson("Gtin");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Description", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductId");

                            b1.ToTable("Product", "Product");

                            b1.ToJson("Description");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Name", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductId");

                            b1.ToTable("Product", "Product");

                            b1.ToJson("Name");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("Brand");

                    b.Navigation("Description");

                    b.Navigation("Gtin");

                    b.Navigation("Icon");

                    b.Navigation("Image");

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("PrincipalDetail");
                });

            modelBuilder.Entity("KanzApi.Product.Entities.ProductAttribute", b =>
                {
                    b.HasOne("KanzApi.Product.Entities.Attribute", "Attribute")
                        .WithMany()
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KanzApi.Common.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("KanzApi.Product.Entities.Product", "Product")
                        .WithMany("Attributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Product.Entities.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Image");

                    b.Navigation("Product");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("KanzApi.Product.Entities.ProductCategory", b =>
                {
                    b.HasOne("KanzApi.Product.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Product.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Product.Entities.ProductImage", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Product.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KanzApi.Product.Entities.SaleItem", b =>
                {
                    b.HasOne("KanzApi.Product.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Account.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("KanzApi.Security.Entities.OneTimeToken", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Principal");
                });

            modelBuilder.Entity("KanzApi.Security.Entities.Otp", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Principal");
                });

            modelBuilder.Entity("KanzApi.Security.Entities.RefreshToken", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Principal");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.Cart", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Product.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Principal");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.CartSaleItem", b =>
                {
                    b.HasOne("KanzApi.Transaction.Entities.Cart", "Cart")
                        .WithMany("CartSaleItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Product.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KanzApi.Product.Entities.SaleItem", "SaleItem")
                        .WithMany()
                        .HasForeignKey("SaleItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Account.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");

                    b.Navigation("SaleItem");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.CustomerOrder", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.PrincipalAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KanzApi.Product.Entities.Product", "HiglightedProduct")
                        .WithMany()
                        .HasForeignKey("HiglightedProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KanzApi.Transaction.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("KanzApi.Account.Entities.PrincipalDetail", "PrincipalDetail")
                        .WithMany()
                        .HasForeignKey("PrincipalDetailId");

                    b.HasOne("KanzApi.Account.Entities.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("HiglightedProduct");

                    b.Navigation("PaymentMethod");

                    b.Navigation("Principal");

                    b.Navigation("PrincipalDetail");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.CustomerOrderItem", b =>
                {
                    b.HasOne("KanzApi.Transaction.Entities.CustomerOrder", "CustomerOrder")
                        .WithMany("Items")
                        .HasForeignKey("CustomerOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Product.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CustomerOrder");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.Exchange", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.PrincipalDetail", "PrincipalDetail")
                        .WithMany()
                        .HasForeignKey("PrincipalDetailId");

                    b.HasOne("KanzApi.Account.Entities.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KanzApi.Product.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Transaction.Entities.PurchaseQuote", "PurchaseQuote")
                        .WithMany()
                        .HasForeignKey("PurchaseQuoteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KanzApi.Account.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Principal");

                    b.Navigation("PrincipalDetail");

                    b.Navigation("Product");

                    b.Navigation("PurchaseQuote");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.ExchangeImage", b =>
                {
                    b.HasOne("KanzApi.Transaction.Entities.Exchange", null)
                        .WithMany()
                        .HasForeignKey("ExchangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Common.Entities.Image", null)
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.Inquiry", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Product.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Principal");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.PaymentMethod", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Image", "ImageAr")
                        .WithMany()
                        .HasForeignKey("ImageArId");

                    b.HasOne("KanzApi.Common.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Description", b1 =>
                        {
                            b1.Property<int>("PaymentMethodId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PaymentMethodId");

                            b1.ToTable("PaymentMethod", "Transaction");

                            b1.ToJson("Description");

                            b1.WithOwner()
                                .HasForeignKey("PaymentMethodId");
                        });

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Instruction", b1 =>
                        {
                            b1.Property<int>("PaymentMethodId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PaymentMethodId");

                            b1.ToTable("PaymentMethod", "Transaction");

                            b1.ToJson("Instruction");

                            b1.WithOwner()
                                .HasForeignKey("PaymentMethodId");
                        });

                    b.OwnsOne("KanzApi.Common.Models.LocalizableString", "Name", b1 =>
                        {
                            b1.Property<int>("PaymentMethodId")
                                .HasColumnType("int");

                            b1.Property<string>("Ar")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("En")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PaymentMethodId");

                            b1.ToTable("PaymentMethod", "Transaction");

                            b1.ToJson("Name");

                            b1.WithOwner()
                                .HasForeignKey("PaymentMethodId");
                        });

                    b.Navigation("Description");

                    b.Navigation("Image");

                    b.Navigation("ImageAr");

                    b.Navigation("Instruction");

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.ProductReview", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KanzApi.Product.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Transaction.Entities.PurchaseQuote", "PurchaseQuote")
                        .WithMany()
                        .HasForeignKey("PurchaseQuoteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Principal");

                    b.Navigation("Product");

                    b.Navigation("PurchaseQuote");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.ProductReviewImage", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Image", null)
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Transaction.Entities.ProductReview", null)
                        .WithMany()
                        .HasForeignKey("ProductReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.PurchaseQuote", b =>
                {
                    b.HasOne("KanzApi.Transaction.Entities.CustomerOrder", "CustomerOrder")
                        .WithMany()
                        .HasForeignKey("CustomerOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KanzApi.Transaction.Entities.CustomerOrderItem", "CustomerOrderItem")
                        .WithMany("PurchaseQuotes")
                        .HasForeignKey("CustomerOrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Product.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KanzApi.Account.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KanzApi.Transaction.Entities.StoreOrder", "StoreOrder")
                        .WithMany()
                        .HasForeignKey("StoreOrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CustomerOrder");

                    b.Navigation("CustomerOrderItem");

                    b.Navigation("Product");

                    b.Navigation("Store");

                    b.Navigation("StoreOrder");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.Refund", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.PrincipalDetail", "PrincipalDetail")
                        .WithMany()
                        .HasForeignKey("PrincipalDetailId");

                    b.HasOne("KanzApi.Account.Entities.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KanzApi.Product.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Transaction.Entities.PurchaseQuote", "PurchaseQuote")
                        .WithMany()
                        .HasForeignKey("PurchaseQuoteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KanzApi.Account.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Principal");

                    b.Navigation("PrincipalDetail");

                    b.Navigation("Product");

                    b.Navigation("PurchaseQuote");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.RefundImage", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Image", null)
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Transaction.Entities.Refund", null)
                        .WithMany()
                        .HasForeignKey("RefundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.Shipping", b =>
                {
                    b.HasOne("KanzApi.Transaction.Entities.CustomerOrder", "CustomerOrder")
                        .WithMany()
                        .HasForeignKey("CustomerOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Transaction.Entities.ShippingMethod", "ShippingMethod")
                        .WithMany()
                        .HasForeignKey("ShippingMethodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CustomerOrder");

                    b.Navigation("ShippingMethod");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.StoreOrder", b =>
                {
                    b.HasOne("KanzApi.Transaction.Entities.CustomerOrder", "CustomerOrder")
                        .WithMany("StoreOrders")
                        .HasForeignKey("CustomerOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanzApi.Account.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CustomerOrder");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.WishList", b =>
                {
                    b.HasOne("KanzApi.Account.Entities.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KanzApi.Product.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Principal");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.Withdraw", b =>
                {
                    b.HasOne("KanzApi.Common.Entities.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("KanzApi.Account.Entities.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("Principal");
                });

            modelBuilder.Entity("KanzApi.Account.Entities.PrincipalDetail", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("KanzApi.Common.Entities.FaqGroup", b =>
                {
                    b.Navigation("Faqs");
                });

            modelBuilder.Entity("KanzApi.Product.Entities.Category", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("KanzApi.Product.Entities.Product", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.Cart", b =>
                {
                    b.Navigation("CartSaleItems");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.CustomerOrder", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("StoreOrders");
                });

            modelBuilder.Entity("KanzApi.Transaction.Entities.CustomerOrderItem", b =>
                {
                    b.Navigation("PurchaseQuotes");
                });
#pragma warning restore 612, 618
        }
    }
}
